commit 70b904cc15f9039c998b2e29eebd8bfb61878689
tree e9333ed82751bf492fb1e83cc59c6ad0b5602d88
author Aysia <asia.lv@hotmail.com> 1472180689 -0700
committer Aysia <asia.lv@hotmail.com> 1472180689 -0700

    Initial Commit

diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
index 0000000..6c0b863
--- /dev/null
+++ b/.idea/vcs.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/app/src/main/java/com/linux_girl/popularmovies/DetailActivity.java b/app/src/main/java/com/linux_girl/popularmovies/DetailActivity.java
new file mode 100644
index 0000000..4923a34
--- /dev/null
+++ b/app/src/main/java/com/linux_girl/popularmovies/DetailActivity.java
@@ -0,0 +1,29 @@
+package com.linux_girl.popularmovies;
+
+import android.os.Bundle;
+import android.support.design.widget.FloatingActionButton;
+import android.support.design.widget.Snackbar;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.view.View;
+
+public class DetailActivity extends AppCompatActivity {
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_detail);
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        setSupportActionBar(toolbar);
+
+        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
+        fab.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
+                        .setAction("Action", null).show();
+            }
+        });
+    }
+
+}
diff --git a/app/src/main/java/com/linux_girl/popularmovies/Movie.java b/app/src/main/java/com/linux_girl/popularmovies/Movie.java
new file mode 100644
index 0000000..207c8da
--- /dev/null
+++ b/app/src/main/java/com/linux_girl/popularmovies/Movie.java
@@ -0,0 +1,48 @@
+package com.linux_girl.popularmovies;
+
+/**
+ * Created by Lani on 8/24/2016.
+ */
+public class Movie {
+
+    /** TMDB ID of the Movie */
+    public final String id;
+
+    /** Title of the Movie  */
+    public final String title;
+
+    /** Overview of the Movie */
+    public final String  overview;
+
+    /** Poster path of the Movie */
+    public final String poster_path;
+
+    /**
+     * Constructs a new {@link Movie}.
+     *
+     * @param TMDB_id is the ID of the movie
+     * @param TMDB_title is the title of the movie
+     * @param TMDB_overview is the overview of the movie
+     * @param TMDB_poster_path is the poster path of the movie
+     */
+    public Movie(String TMDB_id, String TMDB_title, String TMDB_overview, String TMDB_poster_path) {
+        id = TMDB_id;
+        title = TMDB_title;
+        overview = TMDB_overview;
+        poster_path = TMDB_poster_path;
+    }
+
+    public String  getId() { return id; }
+
+    public String getTitle() {
+        return title;
+    }
+
+    public String getOverview() {
+        return overview;
+    }
+
+    public String getPosterpath() {
+        return poster_path;
+    }
+}
diff --git a/app/src/main/java/com/linux_girl/popularmovies/MovieAdapter.java b/app/src/main/java/com/linux_girl/popularmovies/MovieAdapter.java
new file mode 100644
index 0000000..66d0359
--- /dev/null
+++ b/app/src/main/java/com/linux_girl/popularmovies/MovieAdapter.java
@@ -0,0 +1,62 @@
+package com.linux_girl.popularmovies;
+
+import android.app.Activity;
+import android.content.Context;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ArrayAdapter;
+import android.widget.ImageView;
+
+import com.squareup.picasso.Picasso;
+
+import java.util.ArrayList;
+
+
+public final class MovieAdapter extends ArrayAdapter<Movie> {
+
+    final static String LOG_TAG = MovieAdapter.class.getSimpleName();
+
+    /** Create a new @link (MovieAdapter) Object */
+    public MovieAdapter(Activity context, ArrayList<Movie> movie) {
+        super(context, 0, movie);
+    }
+
+    @Override
+    public View getView(int position, View convertView, ViewGroup parent) {
+
+        // Check if an existing view is being reused, otherwise inflate the view
+        if (convertView == null) {
+            convertView = LayoutInflater.from(getContext()).inflate(
+                    R.layout.movie_item, parent, false);
+        }
+
+        // Get the {@link Movie} object located at this position in the list
+       Movie currentMovie = getItem(position);
+
+       // Find the ImageView in the movie_item.xml layout with the ID movie_cover.
+       ImageView movieCover = (ImageView) convertView.findViewById(R.id.movie_cover);
+
+        String posterPath = getImageUrl(currentMovie.getPosterpath());
+        Context context = convertView.getContext();
+            Picasso.with(context)
+                    .load(posterPath)
+                    .into(movieCover);
+
+        // Return the whole movie item layout (containing 1 ImageView and 1 TextView) 
+
+        return convertView;
+
+    }
+
+    /** Build the URL to get Image from TMDB Picasso will handle the rest*/
+    private String getImageUrl(String poster_path) {
+
+        String baseUrl = "http://image.tmdb.org/t/p/";
+        String size = "w185";
+
+        return baseUrl + size + poster_path;
+
+    }
+
+}
diff --git a/app/src/main/java/com/linux_girl/popularmovies/MovieAsyncTask.java b/app/src/main/java/com/linux_girl/popularmovies/MovieAsyncTask.java
new file mode 100644
index 0000000..2bf0f3d
--- /dev/null
+++ b/app/src/main/java/com/linux_girl/popularmovies/MovieAsyncTask.java
@@ -0,0 +1,164 @@
+package com.linux_girl.popularmovies;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.SharedPreferences;
+import android.net.Uri;
+import android.os.AsyncTask;
+import android.preference.PreferenceManager;
+import android.support.v4.app.LoaderManager;
+import android.util.Log;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.net.HttpURLConnection;
+import java.net.URL;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * Created by Lani on 8/25/2016.
+ */
+public class MovieAsyncTask extends AsyncTask<String, Void, ArrayList<Movie>> {
+
+    private final String LOG_TAG = MovieAsyncTask.class.getSimpleName();
+    public ArrayList<Movie> movie = new ArrayList<>();
+
+    @Override
+    protected ArrayList<Movie> doInBackground(String... params) {
+
+        // These two need to be declared outside the try/catch
+        // so that they can be closed in the finally block.
+        HttpURLConnection urlConnection = null;
+        BufferedReader reader = null;
+
+        // Will contain the raw JSON response as a string.
+        String moviesJsonStr = null;
+
+        try {
+            // Construct the URL for the TMDP query
+
+            final String MOVIES_BASE_URL =
+                    "http://api.themoviedb.org/3/movie/" + params[0];
+
+
+            //https://api.themoviedb.org/3/movie/popular?api_key=431cc7d605d944aabd7a518784a707e9
+
+            final String APPID_PARAM = "api_key";
+
+            Uri builtUri = Uri.parse(MOVIES_BASE_URL).buildUpon()
+                    .appendQueryParameter(APPID_PARAM, BuildConfig.THE_MOVIE_DB_API_CODE)
+                    .build();
+
+            URL url = new URL(builtUri.toString());
+
+            // Create the request to theMoviedb.org, and open the connection
+            urlConnection = (HttpURLConnection) url.openConnection();
+            urlConnection.setRequestMethod("GET");
+            urlConnection.connect();
+
+            // Read the input stream into a String
+            InputStream inputStream = urlConnection.getInputStream();
+            StringBuffer buffer = new StringBuffer();
+            if (inputStream == null) {
+                // Nothing to do.
+                return null;
+            }
+            reader = new BufferedReader(new InputStreamReader(inputStream));
+
+            String line;
+            while ((line = reader.readLine()) != null) {
+                // Since it's JSON, adding a newline isn't necessary (it won't affect parsing)
+                // But it does make debugging a *lot* easier if you print out the completed
+                // buffer for debugging.
+                buffer.append(line + "\n");
+            }
+
+            if (buffer.length() == 0) {
+                // Stream was empty.  No point in parsing.
+                return null;
+            }
+            moviesJsonStr = buffer.toString();
+
+        } catch (
+                IOException e
+                )
+
+        {
+            Log.e(LOG_TAG, "Error ", e);
+            // If the code didn't successfully get the movie data, there's no point in attemping
+            // to parse it.
+            return null;
+        } finally
+
+        {
+            if (urlConnection != null) {
+                urlConnection.disconnect();
+            }
+            if (reader != null) {
+                try {
+                    reader.close();
+                } catch (final IOException e) {
+                    Log.e(LOG_TAG, "Error closing stream", e);
+                }
+            }
+        }
+
+        try {
+            ArrayList<Movie> movies = getMoviesFromJson(moviesJsonStr);
+            return movies;
+
+        } catch (JSONException e) {
+            e.printStackTrace();
+        }
+
+        return null;
+
+
+    }
+
+    private ArrayList<Movie> getMoviesFromJson(String moviesJsonStr)
+            throws JSONException {
+
+        // These are the names of the JSON objects that need to be extracted.
+        final String TMDB_RESULTS = "results";
+        final String TMDB_POSTERPATH = "poster_path";
+        final String TMDB_OVERVIEW = "overview";
+        final String TMDB_ID = "id";
+        final String TMDB_ORIGINAL_TITLE = "original_title";
+
+        JSONObject movieJSON = new JSONObject(moviesJsonStr);
+        JSONArray movieArray = movieJSON.getJSONArray(TMDB_RESULTS);
+
+        ArrayList<Movie> movies = new ArrayList<>();
+
+        for (int i = 0; i < movieArray.length(); i++) {
+            String poster_path;
+            String overview;
+            String original_title;
+            String id;
+
+            JSONObject resultObject = movieArray.getJSONObject(i);
+
+            poster_path = resultObject.getString(TMDB_POSTERPATH);
+            id = resultObject.getString(TMDB_ID);
+            overview = resultObject.getString(TMDB_OVERVIEW);
+            original_title = resultObject.getString(TMDB_ORIGINAL_TITLE);
+
+            movies.add(new Movie(id, original_title, overview, poster_path));
+
+        }
+        return movies;
+    }
+
+    protected void onPostExecute(ArrayList<Movie> movie) {
+
+    }
+
+}
diff --git a/app/src/main/java/com/linux_girl/popularmovies/MovieFragment.java b/app/src/main/java/com/linux_girl/popularmovies/MovieFragment.java
new file mode 100644
index 0000000..efc16ec
--- /dev/null
+++ b/app/src/main/java/com/linux_girl/popularmovies/MovieFragment.java
@@ -0,0 +1,89 @@
+package com.linux_girl.popularmovies;
+
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.os.Bundle;
+import android.preference.PreferenceManager;
+import android.support.v4.app.Fragment;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.AdapterView;
+import android.widget.GridView;
+
+import java.util.ArrayList;
+
+/**
+ * A simple {@link Fragment} subclass.
+ */
+public class MovieFragment extends Fragment {
+    ArrayList<Movie> movie = new ArrayList<>();
+
+    final static String LOG_TAG = MovieFragment.class.getSimpleName();
+    public Context context = getContext();
+
+    private static MovieAdapter mAdapter;
+
+    public MovieFragment() {
+        // Required empty public constructor
+    }
+
+    public static void setMovieAdapter(ArrayList<Movie> movie) {
+        mAdapter.clear();
+        mAdapter.addAll(movie);
+        mAdapter.notifyDataSetChanged();
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        setHasOptionsMenu(true);
+        updateMovies();
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        setHasOptionsMenu(true);
+
+        // Create Adapter
+        MovieAdapter adapter = new MovieAdapter(getActivity(), new ArrayList<Movie>());
+        // inflate the layout
+        View rootView = inflater.inflate(R.layout.fragment_main, container, false);
+        // get the Main Grid
+        GridView mainGridView = (GridView) rootView.findViewById(R.id.main_grid);
+        // set the Adapter
+        mainGridView.setAdapter(adapter);
+
+
+//        mainGridView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+//            @Override
+//            public void onItemClick(AdapterView<?> adapterView, View view, int position, long l) {
+//                Movie currentMovie = adapter.getItem(position);
+//
+//                //String message = movie;
+//                Intent i = new Intent(getActivity(), DetailActivity.class);
+//                        //.putExtra(EXTRA_MESSAGE, message);
+//                startActivity(i);
+//            }
+//        });
+
+        /** Set the adapter */
+
+
+        return rootView;
+    }
+
+    private void updateMovies() {
+        GetMovieTask task = new GetMovieTask();
+        SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getActivity());
+        String sortOrder = prefs.getString(getString(R.string.pref_sort_key),
+                getString(R.string.pref_sort_default));
+        task.execute(sortOrder);
+    }
+}
diff --git a/app/src/main/java/com/linux_girl/popularmovies/SettingsActivity.java b/app/src/main/java/com/linux_girl/popularmovies/SettingsActivity.java
new file mode 100644
index 0000000..82c3e5b
--- /dev/null
+++ b/app/src/main/java/com/linux_girl/popularmovies/SettingsActivity.java
@@ -0,0 +1,72 @@
+package com.linux_girl.popularmovies;
+
+/**
+ * Created by Lani on 8/25/2016.
+ */
+
+import android.os.Bundle;
+import android.preference.ListPreference;
+import android.preference.Preference;
+import android.preference.PreferenceActivity;
+import android.preference.PreferenceManager;
+import android.util.Log;
+
+/**
+ * A {@link PreferenceActivity} that presents a set of application settings.
+ * <p>
+ * See <a href="http://developer.android.com/design/patterns/settings.html">
+ * Android Design: Settings</a> for design guidelines and the <a
+ * href="http://developer.android.com/guide/topics/ui/settings.html">Settings
+ * API Guide</a> for more information on developing a Settings UI.
+ */
+public class SettingsActivity extends PreferenceActivity
+        implements Preference.OnPreferenceChangeListener {
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        // Add 'general' preferences, defined in the XML file
+        addPreferencesFromResource(R.xml.pref_general);
+        bindPreferenceSummaryToValue(findPreference(getString(R.string.pref_sort_key)));
+    }
+
+    /**
+     * Attaches a listener so the summary is always updated with the preference value.
+     * Also fires the listener once, to initialize the summary (so it shows up before the value
+     * is changed.)
+     */
+    private void bindPreferenceSummaryToValue(Preference preference) {
+        // Set the listener to watch for value changes.
+
+        preference.setOnPreferenceChangeListener(this);
+
+        // Trigger the listener immediately with the preference's
+        // current value.
+        onPreferenceChange(preference,
+                PreferenceManager
+                        .getDefaultSharedPreferences(preference.getContext())
+                        .getString(preference.getKey(), ""));
+
+    }
+
+    @Override
+    public boolean onPreferenceChange(Preference preference, Object value) {
+        String stringValue = value.toString();
+
+        if (preference instanceof ListPreference) {
+            // For list preferences, look up the correct display value in
+            // the preference's 'entries' list (since they have separate labels/values).
+            ListPreference listPreference = (ListPreference) preference;
+            int prefIndex = listPreference.findIndexOfValue(stringValue);
+            if (prefIndex >= 0) {
+                preference.setSummary(listPreference.getEntries()[prefIndex]);
+            }
+        } else {
+            // For other preferences, set the summary to the value's simple string representation.
+            preference.setSummary(stringValue);
+        }
+        return true;
+    }
+
+}
+
diff --git a/app/src/main/res/layout/activity_detail.xml b/app/src/main/res/layout/activity_detail.xml
new file mode 100644
index 0000000..76ad12b
--- /dev/null
+++ b/app/src/main/res/layout/activity_detail.xml
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    tools:context="com.linux_girl.popularmovies.DetailActivity">
+
+    <android.support.design.widget.AppBarLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:theme="@style/AppTheme.AppBarOverlay">
+
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="?attr/colorPrimary"
+            app:popupTheme="@style/AppTheme.PopupOverlay" />
+
+    </android.support.design.widget.AppBarLayout>
+
+    <include layout="@layout/content_detail" />
+
+    <android.support.design.widget.FloatingActionButton
+        android:id="@+id/fab"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="bottom|end"
+        android:layout_margin="@dimen/fab_margin"
+        android:src="@android:drawable/ic_dialog_email" />
+
+</android.support.design.widget.CoordinatorLayout>
diff --git a/app/src/main/res/layout/content_detail.xml b/app/src/main/res/layout/content_detail.xml
new file mode 100644
index 0000000..7913b30
--- /dev/null
+++ b/app/src/main/res/layout/content_detail.xml
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    app:layout_behavior="@string/appbar_scrolling_view_behavior"
+    tools:context="com.linux_girl.popularmovies.DetailActivity"
+    tools:showIn="@layout/activity_detail">
+
+</RelativeLayout>
diff --git a/app/src/main/res/layout/fragment_main.xml b/app/src/main/res/layout/fragment_main.xml
new file mode 100644
index 0000000..3defd88
--- /dev/null
+++ b/app/src/main/res/layout/fragment_main.xml
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <GridView
+        android:id="@+id/main_grid"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:verticalSpacing="0dp"
+        android:horizontalSpacing="0dp"
+        android:stretchMode="columnWidth"
+        android:numColumns="3"/>
+
+
+</FrameLayout>
diff --git a/app/src/main/res/layout/movie_item.xml b/app/src/main/res/layout/movie_item.xml
new file mode 100644
index 0000000..65b50d6
--- /dev/null
+++ b/app/src/main/res/layout/movie_item.xml
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?><!-- layout for a single movie element -->
+
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:padding="4dp">
+
+    <ImageView
+        android:id="@+id/movie_cover"
+        android:layout_width="120dp"
+        android:layout_height="180dp"
+        android:layout_gravity="top"
+        android:scaleType="fitXY" />
+
+</FrameLayout>
\ No newline at end of file
diff --git a/app/src/main/res/menu/main.xml b/app/src/main/res/menu/main.xml
new file mode 100644
index 0000000..b147c9b
--- /dev/null
+++ b/app/src/main/res/menu/main.xml
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools" tools:context=".MainActivity">
+
+    <item android:id="@+id/action_settings" android:title="@string/action_settings"
+        android:orderInCategory="100" app:showAsAction="never" />
+
+    <item android:id="@+id/action_refresh"
+        app:showAsAction="never"
+        android:title="@string/action_refresh" />
+</menu>
\ No newline at end of file
diff --git a/app/src/main/res/values-v21/styles.xml b/app/src/main/res/values-v21/styles.xml
new file mode 100644
index 0000000..dbbdd40
--- /dev/null
+++ b/app/src/main/res/values-v21/styles.xml
@@ -0,0 +1,9 @@
+<resources>
+
+    <style name="AppTheme.NoActionBar">
+        <item name="windowActionBar">false</item>
+        <item name="windowNoTitle">true</item>
+        <item name="android:windowDrawsSystemBarBackgrounds">true</item>
+        <item name="android:statusBarColor">@android:color/transparent</item>
+    </style>
+</resources>
diff --git a/app/src/main/res/values/array.xml b/app/src/main/res/values/array.xml
new file mode 100644
index 0000000..c7c41c3
--- /dev/null
+++ b/app/src/main/res/values/array.xml
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string-array name="listArray">
+        <item>Popularity</item>
+        <item>Ratings</item>
+    </string-array>
+
+    <string-array name="listValues">
+        <item>popular</item>
+        <item>top_rated</item>
+    </string-array>
+</resources>
\ No newline at end of file
diff --git a/app/src/main/res/xml/pref_general.xml b/app/src/main/res/xml/pref_general.xml
new file mode 100644
index 0000000..7c277aa
--- /dev/null
+++ b/app/src/main/res/xml/pref_general.xml
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <ListPreference
+        android:defaultValue="0"
+        android:entries="@array/listArray"
+        android:entryValues="@array/listValues"
+        android:key="@string/pref_sort_key"
+        android:title="@string/pref_sort_title" />
+
+</PreferenceScreen>
\ No newline at end of file
